@model List<DynamicHyperTagViewModel>
@{
	var baseUrl = Url.Action("Index", "Thumbnail");
}

@foreach (var tag in Model)
{
	var imgUrl = baseUrl + "?width=336&height=188&assetid=" + tag.AssetGuid + "&index=" + tag.FragmentIndex + "&serverUri=" + tag.ServerUri;
	var second = Convert.ToInt32(tag.WallClockTime.TotalSeconds).ToString();
	var missionDetailsUrl = Url.Action("Details", "Workbench/Operations/Missions", new { area = "Workbench", MissionId = tag.MissionId?.ToString(), serverUri = tag.ServerUri });
	var assetDetailsUrl = Url.Action("", "Workbench/Content/Asset", new { titleSearchInput = tag.AssetGuid, serverUri = tag.ServerUri, area = "Workbench" });
	var childrenIds = string.Join("&ids=", tag.Children.Select(it => Html.Encode(it.TagId)));

	var json = "";
	try
	{
		json = @tag.ToSimpleJSON("");
	}
	catch
	{
	}

	if (tag.Elements == null) {
        <h3 style="color:red;">Invalid tags ...</h3>
		return;
	}

	if (!ViewBag.IsChildren && !string.IsNullOrEmpty(tag.ParentTagId)) {
		continue;
	}

	<div class="vertical-timeline-block">
		<div class="vertical-timeline-icon timeline-icon-bg">
			<i class="fa fa-tag"></i>
		</div>
		<div class="vertical-timeline-content timeline container-fluid"
			 data-id="@tag.TagId"
			 data-workflowinstanceid="@tag.WorkflowInstanceId"
			 data-assetid="@tag.AssetGuid"
			 data-elements="@tag.Elements.Count"
			 data-children="@tag.Children.Count"
			 data-wallclock="@tag.WallClockTime"
			 data-taggingtitle="@tag.TaggingTitle">
			<div class="timeline-tagjson hidden">@json</div>

			<div class="row box-timeline">
				<div class="col-md-5 timeline video-col-timeline">
					<img 
						 class="img-fluid timeline" 
						 src=@Url.Content("~/images/default.png") 
						 data-src="@imgUrl"
						 data-asset-id="@tag.AssetGuid"
						 data-fragment-index="@tag.FragmentIndex"
						 onmouseover="thumbnailMouseOver(this)" 
						 onmouseout="thumbnailMouseOut(this)"
					/>
					<a class="player-icon" onclick="timeline_playAsset(this)"
					   data-title="@tag.TaggingTitle"
					   data-assetid="@tag.AssetGuid"
					   data-host="@tag.HlsServerHost"
					   data-second="@second">
						<i class="fa fa-play-circle-o fa-4x"></i>
					</a>
				</div>
				<div class="col details-col-timeline" style="padding-bottom: 5px;">
					@if (!string.IsNullOrWhiteSpace(tag.Title?.ToString()))
					{
						<h4 class="timline-tag-title">@tag.Title</h4>
					}

					@if (string.IsNullOrWhiteSpace(tag.TaggingTitle?.ToString()))
					{
						if (tag.BasicMLTags != null && tag.BasicMLTags.Labels != null)
						{
							for (var i = 0; i < tag.BasicMLTags.Labels.Length; i++)
							{
								var percent_confidence = (tag.BasicMLTags.Confidences[i]).ToString("#0.0%");
								<h5>@tag.BasicMLTags.Labels[i] - @percent_confidence</h5>
							}
						}
						else
						{
							@*<h4>unknown</h4>*@
						}
					}
					else
					{
						@*<h4>@tag.TaggingTitle</h4>*@

						if (tag.TagPaths != null && tag.TagPaths.Count > 0)
						{
							<ol class="breadcrumb breadcrumb-timeline">
								@for (var i = 0; i < tag.TagPaths.Count; i++)
								{
									<li class="breadcrumb-item-timeline">
										@if (i == 0)
										{<i class="fa fa-home"></i> }
										else
										{ <i class="fa fa-angle-right"></i>}
										<span class="tagTimelinePath">@tag.TagPaths[i]</span>
									</li>
								}
							</ol>
							<div class="clearfix"></div>
						}

						if (tag.BasicMLTags != null && tag.BasicMLTags.Labels != null)
						{
							for (var i = 0; i < tag.BasicMLTags.Labels.Length; i++)
							{
								var percent_confidence = (tag.BasicMLTags.Confidences[i]).ToString("#0.0%");
								<h5>@tag.BasicMLTags.Labels[i] - @percent_confidence</h5>
							}
						}
					}

					@if (string.IsNullOrWhiteSpace(tag.MissionName?.ToString()))
					{
						<h5><a href="@missionDetailsUrl" target="_blank">Mission: unknown</a></h5>
					}
					else
					{
						<h5><a href="@missionDetailsUrl" target="_blank">Mission: @tag.MissionName</a></h5>
					}
					<h5 class="timeline-tagworkflowinfo"></h5>
					<small>Time UTC @tag.DynamicData.RealWorldContentTimeUTC</small>

					<div class="timeline-elements-container">

						<ul class="timeline-tag-list" style="padding: 0">
							@foreach (var el in tag.ElementLabels)
							{
								<li>
									<a href="#">
										<i class="fa fa-industry"></i>
										<span>@el</span>
									</a>
								</li>
							}
						</ul>
					</div>

					@*<span class="timeline-children-container">
			@if (tag.Children.Count > 0)
			{
				<a onclick="timeline_children_load(this)" data-ids="@childrenIds">Children: @tag.Children.Count</a>
			}
		</span>*@

					<div class="timeline-short-btns">
						<span><a class="" title="Copy Tag Id" onclick="timeline_copyId(this)"><i class="fa fa-copy"></i></a></span>
						<span><a class="" title="Asset Details" href="@assetDetailsUrl" target="_blank"><i class="fa fa-info-circle"></i></a></span>
						<span>
							<a class="timeline-tag-elements-count-info" title="Tag Elements" onclick="timeline_elements(this)">
								<i class="fa fa-industry"></i>
								<span class="label label-info" id="alerts-count">@tag.Elements.Count</span>
							</a>
						</span>
					</div>
					@*<div>
			<a class="btn btn-default btn-xs" onclick="timeline_copyId(this)">CopyId</a>
			<a class="btn btn-default btn-xs" href="@assetDetailsUrl" target="_blank">Asset Details</a>
		</div>*@

					<div class="clearfix"></div>

					@if (tag.Children.Count > 0)
					{
						var maxTimeRange = tag.WallClockTime;
						var minTimeRange = tag.WallClockTime;

						if (tag.Children != null)
						{
							foreach (var child in tag.Children)
							{
								maxTimeRange = child.WallClockTime > maxTimeRange ? child.WallClockTime : maxTimeRange;
								minTimeRange = child.WallClockTime < minTimeRange ? child.WallClockTime : minTimeRange;
							}
						}

						<h5 style="margin-top: 10px; margin-bottom: 0px;">Children</h5>
						<hr style="margin-top: 3px; margin-bottom: 1px;" />

						<ul class="tag-list" style="padding: 0">
							@foreach (var child in tag.Children.OrderBy(it => it.WallClockTime))
							{
								maxTimeRange = child.WallClockTime > maxTimeRange ? child.WallClockTime : maxTimeRange;
								minTimeRange = child.WallClockTime < minTimeRange ? child.WallClockTime : minTimeRange;

								if (string.IsNullOrWhiteSpace(child.TaggingTitle?.ToString()))
								{
									continue;
								}

								<li>
									<a href="" title="Position is @child.TimeLabel">
										@*<i class="fa fa-tag"></i>*@
										@if (child.TagPaths != null && child.TagPaths.Count > 0)
										{
											<ol class="breadcrumb breadcrumb-timeline">
												@for (var i = 0; i < child.TagPaths.Count; i++)
												{
													<li class="breadcrumb-item-timeline">
														@if (i == 0)
														{<i class="fa fa-home"></i> }
														else
														{ <i class="fa fa-angle-right"></i>}
														<span class="tagTimelinePath">@child.TagPaths[i]</span>
													</li>
												}
											</ol>
											<div class="clearfix"></div>
										}
										@*<span>@child.TaggingTitle</span>*@
									</a>
								</li>
							}
						</ul>

					}
				</div>
			</div>

			@if (!string.IsNullOrEmpty(tag.ParentTagId)  && tag.Children.Count > 0)
			{
				var maxTimeRange = tag.WallClockTime;
				var minTimeRange = tag.WallClockTime;

				if (tag.Children != null)
				{
					foreach (var child in tag.Children)
					{
						maxTimeRange = child.WallClockTime > maxTimeRange ? child.WallClockTime : maxTimeRange;
						minTimeRange = child.WallClockTime < minTimeRange ? child.WallClockTime : minTimeRange;
					}
				}
				<span class="vertical-date">
					<b>@maxTimeRange</b> 
					<br />
					<b>@minTimeRange</b>
				</span>
			}
			else
			{
				<div class="vertical-date stream">
					<span class="vertical-date-label">@tag.TimeLabel</span>
				</div>
			}
		</div>
	</div>
}