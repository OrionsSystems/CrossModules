@namespace Orions.Systems.CrossModules.Components

@inherits BaseBlazorComponent<ReportVm>

@using Orions.Node.Common

@using Telerik.Blazor;
@using Telerik.Blazor.Components;

<div class="widget-content-report-linechart">

    @if (DataContext.Report != null && DataContext.IsLoadedReportResult)
    {
        @if (Widget.ShowTitle)
        {
            <h3>@DataContext.Report.Report.Name</h3>
        }

        <div class="widget-content-report-linechart-view">

            <TelerikChart>

                <ChartTitle Visible="@Widget.IsShowChartTitle" Position="@Widget.ChartTitlePosition" Text="@Widget.ChartTitle"></ChartTitle>
                <ChartLegend Position="@Widget.ChartLegendPosition"></ChartLegend>

                <ChartSeriesItems>
                    @foreach (var ser in ChartData.Series)
                    {
                        <ChartSeries Type="@Widget.ChartSeriesType"
                                     Data="@ser.Data"
                                     Name="@ser.Name"
                                     Style="@Widget.ChartSeriesStyle"
                                     CategoryField="@nameof(ReportSeriesChartDataItem.DatePosition)"
                                     Field="@nameof(ReportSeriesChartDataItem.Count)">
                            <ChartSeriesLabels Visible="@Widget.IsChartSeriesLabelsVisible" Template="@CustomSeriesTemplate" Background="transparent"></ChartSeriesLabels>
                            <ChartSeriesStack Enabled="@Widget.IsChartSeriesStackEnabled"></ChartSeriesStack>
                        </ChartSeries>
                    }
                </ChartSeriesItems>

                <ChartCategoryAxes>
                    <ChartCategoryAxis Type="ChartCategoryAxisType.Date" WeekStartDay="1" BaseUnit="@Widget.ChartCategoryAxisBaseUnit" Categories="@ChartData.Categories.ToArray()">
                        <ChartCategoryAxisLabels Format="@Widget.ChartCategoryAxisLabelsFormat">
                            @*<ChartCategoryAxisLabelsRotation Angle="-90"></ChartCategoryAxisLabelsRotation>*@
                        </ChartCategoryAxisLabels>
                    </ChartCategoryAxis>
                </ChartCategoryAxes>

            </TelerikChart>
        </div>

        @if (Widget.ShowFooter)
        {
            <div class="widget-content-report-linechart-footer">
                <div class="">Created at @DataContext.Report.CreatedAtUTC</div>
            </div>
        }
    }

    @if (DataContext.Report == null && DataContext.IsLoadedReportResult)
    {
        <div class="widget-missing-report-data">
            Missing report data!
        </div>
    }

    @if (!DataContext.IsLoadedReportResult)
    {
        <div style="position:relative;">
            <div class="loading-bar"></div>
        </div>
    }

</div>

@code {

    public string CustomSeriesTemplate = "# if (value != 0) { # #=value# #}#";

    public ReportChartData ChartData { get; set; } = new ReportChartData();

    [Parameter]
    public ReportTelericLineChartWidget Widget { get; set; }

    [Parameter]
    public IHyperArgsSink HyperStore { get; set; }

    protected override async Task OnInitializedAsync()
    {
        DataContext.InitStore(HyperStore);

        await DataContext.LoadReportResultData(Widget.DataSource);

        ChartData = DataContext.LoadReportLineChartData();

        await base.OnInitializedAsync();
    }
}

<style>
    .widget-content-report-linechart {
        padding: 15px;
        overflow: hidden;
    }

        .widget-content-report-linechart h3 {
            text-align: center;
        }

    .widget-content-report-linechart-footer {
        font-size: 12px;
        font-style: italic;
    }
</style>
