@namespace Orions.Systems.CrossModules.Components
@inherits DashboardComponent<CarouselVm, CarouselWidget>
@using BlazorStrap

<div class="widget-content-report @Widget.Class">

    @if (Vm.Widget.Data.Count > 0)
    {
        <SeparatorLine Settings="@Widget.TopSeparator"></SeparatorLine>
        <TitleCard Settings="@Widget.TitleSettings"></TitleCard>

        <div class="widget-content-report-view">
            <BSCarousel NumberOfItems="@Vm.Widget.Data.Count"
                        Interval="@(!string.IsNullOrEmpty(Widget.Settings.Interval) ? Convert.ToInt32(Widget.Settings.Interval) : int.MaxValue)"
                        Pause="@(Widget.Settings.Pause == 0 ? "false" :"hover")"
                        Fade="@Widget.Settings.Fade"
                        Touch="@Widget.Settings.Touch"
                        Wrap="@Widget.Settings.Wrap">
                <BSCarouselIndicators NumberOfItems="@Vm.Widget.Data.Count"></BSCarouselIndicators>

                <div class="carousel-inner">
                    @foreach (var item in Vm.Widget.Data)
                    {
                        var base64 = Convert.ToBase64String(item.Source);
                        var imgSrc = String.Format("data:image/*;base64,{0}", base64);
                        
                        <BSCarouselItem src="@imgSrc"
                                        alt="@item.Alt"
                                        Interval="@(!string.IsNullOrEmpty(Widget.Settings.Interval) ? Convert.ToInt32(Widget.Settings.Interval) : int.MaxValue)"
                                        ActionLink="@(Widget.Settings.IsActionLinkEnabled? item.ActionLink:"")"
                                        ActionLinkTarget="@(Widget.Settings.IsActionLinkEnabled ? item.ActionLinkTarget.ToString():"")">
                            <BSCarouselCaption CaptionText="@(Widget.Settings.ShowCaption ? item.Caption:"")"
                                               HeaderText="@(Widget.Settings.ShowCaptionHeader ? item.Header:"")">
                            </BSCarouselCaption>
                        </BSCarouselItem>
                    }
                </div>
                <BSCarouselControl CarouselDirection="CarouselDirection.Previous" NumberOfItems="@Vm.Widget.Data.Count"></BSCarouselControl>
                <BSCarouselControl CarouselDirection="CarouselDirection.Next" NumberOfItems="@Vm.Widget.Data.Count"></BSCarouselControl>

            </BSCarousel>
        </div>

        <SeparatorLine Settings="@Widget.BottomSeparator"></SeparatorLine>
    }

    @if (Vm.Widget.Data.Count == 0)
    {
        <div class="widget-missing-report">
            Missing report data!
        </div>
    }

</div>
@code {

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
    }
}