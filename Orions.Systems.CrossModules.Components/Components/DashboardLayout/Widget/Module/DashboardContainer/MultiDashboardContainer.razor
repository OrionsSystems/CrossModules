@namespace Orions.Systems.CrossModules.Components

@inherits DashboardComponent<MultiDashboardContainerVm, MultiDashboardContainerWidget>

	<div class="@Widget.Class">
		@if (Vm.CurrentDashboardData != null)
		{
			<SeparatorLine Settings="@Widget.TopSeparator"></SeparatorLine>
			<TitleCard Settings="Widget.TitleSettings"></TitleCard>

			<DashboardLayout ref="@DashboardLayout"
								  HyperStore="@HyperStore"
									Data="@Vm.CurrentDashboardData"
									ParrentDashboardId="@Widget.CurrentDashboard?.Id"
									EnableBetweenBox="true"
									IsPreviewMode="true"
									DisableModeOption="true"
									HideModeOption="true"
									IsHideTitle="true">
			</DashboardLayout>

			<SeparatorLine Settings="@Widget.BottomSeparator"></SeparatorLine>
		}
		else
		{
			<div>No Area Selected</div>
			@*<Loader Settings="@Widget.LoaderSettings"></Loader>*@
		}
	</div>


@code {

	//public bool Showing { get; set; } = false;

	DashboardLayout DashboardLayout { get; set; }

	protected override void OnStateHasChanged()
	{
		base.OnStateHasChanged();

		Vm.ChildDashboardVm = DashboardLayout?.Vm;
	}

	protected override async Task OnInitializedAsync()
	{
		await base.OnInitializedAsync();

		//Showing = true;
		StateHasChanged();
	}

}
