@namespace Orions.Systems.CrossModules.Components

@inherits DashboardComponent<ProgressCardVm, ProgressCardWidget>

<div class="widget-content-report">

	@if (Vm.Report != null && Vm.IsLoadedReportResult)
	{
		<SeparatorLine Settings="@Widget.TopSeparator"></SeparatorLine>
		<TitleCard Settings="Widget.TitleSettings"></TitleCard>

		<div class="widget-content-report-view">
			@if (Data.Any())
			{
				<div class="row widget-content-report-progress-line">
					<div class="col-lg-12">
						@foreach (var item in Data)
						{
							<div class="widget-content-report-progress-line-container">
								@if (Widget.IsShowCardIcons)
								{
									<div class="widget-content-report-progress-line-icon" title="@item.Title">
										@((MarkupString)item.SvgIcon)
									</div>
									<div class="widget-content-report-progress-line-progress">
										<ProgressLine IsShowTitle="@Widget.ShowElementTitle"
														  Title="@item.Title"
														  IsShowPercentage="Widget.IsShowPercentage"
														  Percentage="@item.Percentage"
														  Value="@item.IntValue.GetValueOrDefault()"></ProgressLine>
									</div>
								}
								else
								{
									<div class="widget-content-report-progress-line-progress">
										<ProgressLine IsShowTitle="@Widget.ShowElementTitle"
														  Title="@item.Title"
														  IsShowPercentage="Widget.IsShowPercentage"
														  Percentage="@item.Percentage"
														  Value="@item.IntValue.GetValueOrDefault()"></ProgressLine>
									</div>
								}

							</div>
						}
					</div>
				</div>
			}
		</div>

		<SeparatorLine Settings="@Widget.BottomSeparator"></SeparatorLine>
	}

	@if (Vm.Report == null && Vm.IsLoadedReportResult)
	{
		<div class="widget-missing-report">
			Missing report data!
		</div>
	}

	@if (!Vm.IsLoadedReportResult)
	{
		<Loader Settings="@Widget.LoaderSettings"></Loader>
	}

</div>

@code {

	public List<CardItem> Data { get; set; } = new List<CardItem>();

	protected override async Task OnInitializedAsync()
	{
		Vm.OnReportResultChanged += OnChangeDataSource;

		await Vm.RefreshReportResultData();

		await base.OnInitializedAsync();
	}

	private void OnChangeDataSource()
	{
		var total = 0;
		foreach (var series in Vm.ReportChartData.Series)
		{
			var item = new CardItem()
			{
				Title = series.Name,
				Value = series.Data.LastOrDefault()?.Value,
				SvgIcon = series.SvgIcon()
			};

			Data.Add(item);

			total += item.IntValue.GetValueOrDefault();
		}

		if (Widget.CustomItems.Any())
			Data.AddRange(Widget.CustomItems);

		if (total != 0)
		{
			foreach (var item in Data)
			{
				if (item.DoubleValue == null || item.DoubleValue.GetValueOrDefault() == 0) continue;

				item.Percentage = (item.DoubleValue.GetValueOrDefault() / total) * 100;
			}
		}

		StateHasChanged();
	}
}