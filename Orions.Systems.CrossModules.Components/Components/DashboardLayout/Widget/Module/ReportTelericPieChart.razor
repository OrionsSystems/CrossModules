@namespace Orions.Systems.CrossModules.Components

@inherits BaseBlazorComponent<ReportVm>

@using Orions.Infrastructure.HyperMedia
@using Orions.Node.Common

@using Telerik.Blazor;
@using Telerik.Blazor.Components;

<div class="widget-content-report-piechart">

    @if (DataContext.Report != null && DataContext.IsLoadedReportResult)
    {
        @if (Widget.ShowTitle)
        {
            <h3>@DataContext.Report.Report.Name</h3>
        }

        <div class="widget-content-report-piechart-view">
            <TelerikChart>
                <ChartSeriesItems>
                    <ChartSeries Type="ChartSeriesType.Pie"
                                 Data="@TagData"
                                 VisibleInLegendField="@nameof(TagLabelsPieChartData.ShouldShowInLegend)"
                                 Field="@nameof(TagLabelsPieChartData.Count)"
                                 CategoryField="@nameof(TagLabelsPieChartData.Label)"
                                 ExplodeField="@nameof(TagLabelsPieChartData.Explode)">
                        <ChartSeriesLabels Visible="@showPieCharLabel"></ChartSeriesLabels>
                    </ChartSeries>
                </ChartSeriesItems>
                <ChartTitle Visible="false" Text="Items per Label"></ChartTitle>
                <ChartLegend Position="ChartLegendPosition.Right"></ChartLegend>
            </TelerikChart>
        </div>

        @if (Widget.ShowFooter)
        {
            <div class="widget-content-report-piechart-footer">
                <div class="">Created at @DataContext.Report.CreatedAtUTC</div>
            </div>
        }
    }

    @if (DataContext.Report == null && DataContext.IsLoadedReportResult)
    {
        <div class="widget-missing-report-data">
            Missing report data!
        </div>
    }

    @if (!DataContext.IsLoadedReportResult)
    {
        <div style="position:relative;">
            <div class="loading-bar"></div>
        </div>
    }

</div>

@code {

    private bool showPieCharLabel = true;

    private List<TagLabelsPieChartData> TagData = new List<TagLabelsPieChartData>();

    [Parameter]
    public ReportTelericPieChartWidget Widget { get; set; }

    [Parameter]
    public IHyperArgsSink HyperStore { get; set; }

    protected override async Task OnInitializedAsync()
    {
        DataContext.InitStore(HyperStore);

        await DataContext.LoadReportResultData(Widget.ReportResultId);

        LoadTagData();

        await base.OnInitializedAsync();
    }

    private void LoadTagData()
    {
        if (DataContext.Report == null) return;

        var labels = DataContext.Report.Data.ColumnsDefinitions.Select(it => it.Title).ToList();
        var rowData = DataContext.Report.Data.RowsCells.FirstOrDefault().Select(it => Convert.ToUInt16(it.ToString())).ToList();

        for (var i = 0; i < labels.Count; i++)
        {
            TagData.Add(new TagLabelsPieChartData
            {
                Label = labels[i],
                Count = rowData[i]
            });
        }
    }

    public class TagLabelsPieChartData
    {
        public int Count { get; set; }
        public string Label { get; set; }

        public bool ShouldShowInLegend { get; set; } = true;

        public bool Explode { get; set; }

        public string LabelInfo
        {
            get
            {
                return $"{Label}: {Count}";
            }
        }
    }

}

<style>
    .widget-content-report-piechart {
        padding: 15px;
        overflow: hidden;
    }

        .widget-content-report-piechart h3 {
            text-align: center;
        }

    .widget-content-report-piechart-footer {
        font-size: 12px;
        font-style: italic;
    }
</style>
