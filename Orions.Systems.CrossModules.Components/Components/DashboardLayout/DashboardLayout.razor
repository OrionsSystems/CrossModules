@namespace Orions.Systems.CrossModules.Components

@inherits BaseBlazorComponent<DashboardVm>

<div class="container-fluid">

    @ChildContent

    @if (Data.Rows.Any())
    {
        @foreach (var row in DataContext.Source.Rows)
        {
            <div class="row mb-4">

                @foreach (var column in row.Columns)
                {
                    <div @key="column" class="col-sm-@column.Size">

                        <div class="dashboard-element-container" @onmouseover="(e => DataContext.ShowCommands(e, column))" @onmouseout="(e=>DataContext.HideCommands(e, column))">

                            @if (column.ShowCommands)
                            {
                                <div class="dashboard-element-commands">
                                    @if (column.Size > 1)
                                    {
                                        <a class="btn btn-sm btn-outline-dark" @onclick="@(el => { DataContext.SplitColumn(el, row, column); })">||</a>
                                    }
                                    <a class="btn btn-sm btn-outline-dark" @onclick="@(el => { DataContext.DeleteColumn(el, row, column); })">X</a>
                                </div>
                            }

                            <div class="dashboard-content">Content</div>

                            @if (EnableSplitter || row.Columns.Last.Value.Id != column.Id)
                            {
                                <div id="@column.Id"
                                     class="dashboard-dragbar"
                                     @onmousedown="DataContext.OnMouseDownDraging"
                                     @onmousemove="DataContext.OnMouseMoveDraging"
                                     @onmouseup="DataContext.OnMouseUpDraging">
                                </div>
                            }
                        </div>
                    </div>
                }
            </div>
        }
    }
    <div class="row">
        <div class="col text-center">
            <button class="btn btn-dark" @onclick="DataContext.OnAddRow"> Add Row</button>
        </div>
    </div>
</div>


@code{

    [Parameter]
    public DashboardData Data { get { return DataContext.Source; } set { DataContext.Source = value; } }

    [Parameter]
    public bool EnableSplitter { get; set; }

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    [Parameter]
    public EventCallback OnSave { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
    }

    

}

<style>
    .dashboard-element-container {
        height: 200px;
        width: 100%;
        border-style: dashed;
        border-color: darkgrey;
        border-width: 1px;
        text-align: center;
    }

    .dashboard-content {
        background-color: #ecf8f4;
        line-height: 200px;
    }

    .dashboard-element-commands {
        position: absolute;
        right: 23px;
        top: 7px;
    }

        .dashboard-element-commands > a {
            cursor: pointer;
            margin-bottom: 3px;
            padding: 2px 2px !important;
            height: 20px;
            width: 20px;
            line-height: 14px;
            font-size: 12px;
        }

            .dashboard-element-commands > a:hover {
                color: white !important;
            }

    .dashboard-dragbar {
        position: absolute;
        background-color: #999494;
        height: 30px;
        float: right;
        width: 6px;
        cursor: col-resize;
        top: calc(50%);
        right: -2px;
    }
</style>
