@namespace Orions.Systems.CrossModules.Components

@using Microsoft.JSInterop
@using BlazorStrap;

@inherits DashboardComponent<CarouselVm, CarouselWidget>

@*<BSCarousel NumberOfItems="@items.Count">
   <BSCarouselIndicators NumberOfItems="@items.Count"/>
      <div class="carousel-inner">
         @for (int i = 0; i <items.Count; i++)
         {
            <BSCarouselItem src="@items[i].Source" alt="@items[i].Alt"/>
         }
         </div>
         <BSCarouselControl CarouselDirection="CarouselDirection.Previous" NumberOfItems="@items.Count"/>
         <BSCarouselControl CarouselDirection="CarouselDirection.Next" NumberOfItems="@items.Count"/>
   </BSCarousel>*@

   <div id="carouselExampleSlidesOnly" class="carousel slide" data-ride="carousel">
      <div class="carousel-inner">
         <div class="carousel-item active">
            <img class="d-block w-100" src="..." alt="First slide">
         </div>
         <div class="carousel-item">
            <img class="d-block w-100" src="..." alt="Second slide">
         </div>
         <div class="carousel-item">
            <img class="d-block w-100" src="..." alt="Third slide">
         </div>
      </div>
   </div>

   @code {
      int i = 0;
      IList<Item> items = new List<Item>
      {
          new Item {
              Source = "...First Slide",
              Alt ="First Slide",
              Caption = "Slide 1",
              Header = "Slide 1 Header"
          },
          new Item {
              Source = "...Second Slide",
              Alt ="Second Slide",
              Caption = "Slide 2",
              Header = "Slide 2 Header"
          },
          new Item {
              Source = "...Third Slide",
              Alt ="Third Slide",
              Caption = "Slide 3",
              Header = "Slide 3 Header"
          }
      };

      class Item
      {
         public string Source { get; set; }
         public string Alt { get; set; }
         public string Caption { get; set; }
         public string Header { get; set; }
      }
   }

   @code{


		protected override async Task OnAfterRenderAsync(bool firstRender)
		{
			//if (firstRender)
			//{
			//   thisReference = DotNetObjectReference.Create(this);
			//   await JsInterop.InvokeAsync<object>("SlideToggle.init", new object[] { thisReference });
			//}
		}

   }

