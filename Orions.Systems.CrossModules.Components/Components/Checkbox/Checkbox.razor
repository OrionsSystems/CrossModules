@namespace Orions.Systems.CrossModules.Components
@inherits BaseBlazorComponent

<div class="form-group form-check @Class" style="@Style" @ref="Ref">
    <input type="checkbox"
            class="form-check-input"
            @onchange="ChangeHandler"
            checked="@Checked"
            disabled=@Disabled
            value="@Value"
            id="@(Id)"
            @ref="ComponentRef"
            @attributes="Attributes" />

    @if (Label != null || ChildContent != null)
    {
        <label class="form-check-label" for="@Id">@Label@ChildContent</label>
    }
</div>
   

@code {

    ElementReference ComponentRef;

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    [Parameter]
    public bool Checked { get; set; }

    [Parameter]
    public string Label { get; set; }

    [Parameter]
    public Action<bool> CheckedChanged { get; set; }

    [Parameter]
    public bool Disabled { get; set; }

    [Parameter]
    public string Value { get; set; }

    protected void ChangeHandler(ChangeEventArgs e)
    {
        Checked = (bool)e.Value;
        CheckedChanged?.Invoke(this.Checked);
    }

    protected async override Task OnFirstAfterRenderAsync()
    {
        await base.OnFirstAfterRenderAsync();
        //await JsInvokeAsync<object>("Orions.Checkbox.init", ComponentRef, Ref);
    }
}
