@namespace Orions.Systems.CrossModules.Components


@inherits WorkflowInstanceListBase

	<div class="workflow-container">

		@if (Vm.IsLoadedData)
		{

			@if (Vm.Items.Any())
			{
				var rowIndex = 0;

				<div class="row">
					<div class="col-lg-12 header-title">Workflow Instaces</div>
				</div>

				<div class="table-responsive list-table">

					<table class="table table-striped table-bordered table-hover">
						<thead>
							<tr>
								<th width="1%" class="nowrap center"></th>
								<th>Name</th>
								<th width="20%" class="nowrap center"></th>
							</tr>
						</thead>
						<tbody>
							@foreach (var item in Vm.Items)
							{
								rowIndex++;

								<tr>
									<td class="center nowrap">@rowIndex</td>
									<td>
										<div class="name-container">
											<div class="workflow-status" style="background-color: @item.StatusBackground;"></div>
											<div class="workflow-name">
												@item.ToString()
											</div>
										</div>
									</td>
									<td class="center list-cmd-container">
										<a class="btn btn-sm" @onclick="@(e => { Vm.ShowPropertyGrid(item); })">
											<MatIcon Icon="@MatIconNames.Settings"></MatIcon>
											<div class="list-cmd-label">Properties</div>
										</a>
										<a class="btn btn-sm" @onclick="@(async e => { await Vm.OpenWorkflowHistoryAsync(item); })">
											<MatIcon Icon="@MatIconNames.History"></MatIcon>
											<div class="list-cmd-label">History</div>
										</a>
										<a class="btn btn-sm" @onclick="@(async e => { await Vm.ManageWorkflowAsync(item); })">
											<MatIcon Icon="@MatIconNames.Gavel"></MatIcon>
											<div class="list-cmd-label">Manage</div>
										</a>
									</td>
								</tr>
							}
						</tbody>
					</table>
				</div>
			}
			else
			{
				<div class="no-data-container"><div class="no-data-text">There isn't any workflow instances</div></div>
			}
		}
		else
		{
			<Loader Settings="@LoaderSetting"></Loader>
		}
	</div>

@if (Vm.IsShowProperty)
{
	<div class="dashboard-modal modal fade show" id="propertyModal" tabindex="-1" role="dialog" style="display: block;">
		<div class="modal-dialog modal-lg modal-dialog-centered" role="document">
			<div class="modal-content">
				<div class="modal-body">
					<PropertyGrid Vm="Vm.PropertyGridVm"
									  Loader="Vm.LoadPropertyGrid"
									  CancelVisible="true"
									  HyperStore="Vm.HyperStore"
									  OKVisible="true"
									  CancelCommand="Vm.OnCancelProperty"
									  OkCommand="Vm.OnCancelProperty">
					</PropertyGrid>
				</div>
			</div>
		</div>
	</div>

	<div class="modal-backdrop fade show"></div>
}

