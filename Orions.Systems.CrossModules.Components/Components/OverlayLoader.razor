<div class="overlay-loader @(IsLoading?"loading": "")">
	<div class="loader-content">
		@ChildContent
	</div>
	<div class="loader-overlay bg-dark">
		<svg xmlns:svg="http://www.w3.org/2000/svg" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.0" width="64px" height="64px" viewBox="0 0 128 128" xml:space="preserve"><g><circle cx="16" cy="64" r="16" fill="#000000" fill-opacity="1" /><circle cx="16" cy="64" r="16" fill="#555555" fill-opacity="0.67" transform="rotate(45,64,64)" /><circle cx="16" cy="64" r="16" fill="#949494" fill-opacity="0.42" transform="rotate(90,64,64)" /><circle cx="16" cy="64" r="16" fill="#cccccc" fill-opacity="0.2" transform="rotate(135,64,64)" /><circle cx="16" cy="64" r="16" fill="#e1e1e1" fill-opacity="0.12" transform="rotate(180,64,64)" /><circle cx="16" cy="64" r="16" fill="#e1e1e1" fill-opacity="0.12" transform="rotate(225,64,64)" /><circle cx="16" cy="64" r="16" fill="#e1e1e1" fill-opacity="0.12" transform="rotate(270,64,64)" /><circle cx="16" cy="64" r="16" fill="#e1e1e1" fill-opacity="0.12" transform="rotate(315,64,64)" /><animateTransform attributeName="transform" type="rotate" values="0 64 64;315 64 64;270 64 64;225 64 64;180 64 64;135 64 64;90 64 64;45 64 64" calcMode="discrete" dur="720ms" repeatCount="indefinite"></animateTransform></g></svg>
	</div>
</div>

<style>
	.overlay-loader {
		position: relative;
		width:100%;
		height:100%;
	}

	.overlay-loader .loader-content{
		width:100%;
		height:100%;
	}

		.overlay-loader .loader-overlay {
			text-align: center;
			top: 0;
			position: absolute;
			z-index: 9999;
			width: 100%;
			height: 100%;
			background-color: gray;
			opacity: 0.65;
			visibility: collapse;
			border-radius: 5px;
		}

		.overlay-loader.loading .loader-overlay {
			visibility: visible;
		}

			.overlay-loader.loading .loader-overlay svg {
				height: 40px;
				margin-top: inherit ;
				position: relative ;
				top: calc(50% - 20px);
			}
</style>

@code {
	[Parameter]
	public RenderFragment ChildContent { get; set; }

	[Parameter]
	public bool IsLoading { get; set; }

	protected override void OnParametersSet()
	{
		base.OnParametersSet();
	}
}
