@namespace Orions.Systems.CrossModules.Components

	<div class="progress-line mt-1">

		@if (IsShowTitle) { 
			<div class="stat-title">
				@Title
			</div>
		}
		@if (!string.IsNullOrWhiteSpace(IconUrl))
		{
			<span class="icon"><img src="@IconUrl"></span>
		}

		@if (IconSource != null)
		{
			<span class="icon"><img src="@ImageBase64Url"></span>
		}

		<span class="stat-progress" style="width: @(Progress)%;"></span>
		@if (IsShowPercentage)
		{
			<span title="@Value" class="stat-value">@PercentageString</span>
		}
		else
		{
			<span class="stat-value">@Value</span>
		}

	</div>

@code {

	[Parameter]
	public byte[] IconSource { get; set; }

	[Parameter]
	public string IconUrl { get; set; }

	[Parameter]
	public int Value { get; set; }

	[Parameter]
	public bool IsShowPercentage { get; set; }

	[Parameter]
	public bool IsShowTitle { get; set; }

	[Parameter]
	public string Title { get; set; }

	[Parameter]
	public double Percentage { get; set; }

	[Parameter]
	public int PercentagePrecision { get; set; } = 2;

	private int Progress { get { return Convert.ToInt32(Percentage); } }

	private string PercentageString { get { 
			var pr = Math.Round(Percentage, PercentagePrecision);
			return $"{pr} %";
		} }

	public string ImageBase64Url
	{
		get
		{
			if (IconSource != null)
			{
				return $"data:image/jpg;base64, {Convert.ToBase64String(IconSource)}";
			}

			return null;
		}
	}

}

<style>

	.progress-line .stat-title {
		vertical-align: middle;
		font-weight:bold;
	}

	.progress-line .icon {
		display: inline-flex;
		width: 12px;
		vertical-align: middle;
	}

		.progress-line .icon img {
			width: 12px;
		}

	.progress-line .stat-progress {
		background-color: #bcc0cc;
		display: inline-flex;
		height: 6px;
		border-radius: 10px;
		vertical-align: middle;
	}

	.progress-line .stat-value {
		vertical-align: middle;
		font-weight:bold;
	}
</style>
