@using Microsoft.AspNetCore.Components
@using MatBlazor
@using BlazorStrap


@functions
{
	[Parameter] public string Name { get; set; }

	[Parameter] public string PopoverTitle { get; set; } = "YAML";
	[Parameter] public string PopoverContents { get; set; }

	public class Line
	{
		public int Offset { get; set; }
		public string Text { get; set; }

		public Line(string text)
		{
			if (text == null)
				return;

			for (int i = 0; i < text.Length; i++)
			{
				if (text[i] == ' ')
					Offset++;
				else
					break;
			}

			string offset = "";
			for (int i = 0; i < Offset; i++)
			{
				offset += ".";
			}

			Text = offset + text.Substring(Offset);
		}
	}

	Line[] Lines => PopoverContents?.Split(Environment.NewLine).Select(it => new Line(it)).ToArray();

	[Parameter] public BlazorStrap.Color Color { get; set; } = BlazorStrap.Color.Primary;

	public bool ModalVisible { get; set; }

	public string Id { get; set; } = Guid.NewGuid().ToString().Substring(0, 4);

	void showModal()
	{
		this.ModalVisible = true;
		base.StateHasChanged();
	}
}

@*<BlazorButton Id="@Id" style="margin-top: 4px;" IsOutline="true" Color="@Color" Size="Size.Small"
				  OnClick="@(e => { showModal(); })">@Name</BlazorButton>*@

<MatListItem OnClick="@showModal">@Name</MatListItem>

@*<MatButton Name="@config.ComponentType.ToString()" Label="@Manager.OnlineStatus"></MatButton>*@


				<Modal IsOpen="@ModalVisible" IsCentered="true" Size="Size.Large">
					<ModalHeader OnClick="(e => { ModalVisible = false; })">@PopoverTitle</ModalHeader>

					<textarea @bind="@PopoverContents" style="min-height:600px"></textarea>

					<ModalFooter>
						<BlazorButton Color="Color.Secondary" OnClick="(e => { ModalVisible = false; })">Close</BlazorButton>
					</ModalFooter>
				</Modal>

				@*<Popover Target="@Id" IsOpen="@PopoverVisible" Placement="Placement.Bottom">
						<PopoverHeader>@PopoverTitle</PopoverHeader>
						<PopoverBody>@PopoverContents</PopoverBody>
					</Popover>*@


