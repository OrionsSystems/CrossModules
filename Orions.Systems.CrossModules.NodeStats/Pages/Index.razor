@page "/"

@using Microsoft.AspNetCore.Components
@using MatBlazor
@using BlazorStrap
@using Orions.Systems.CrossModules.NodeStats

@using System.ComponentModel

@functions
{
   int pages = 1;

   string newNodeUrl { get; set; } = "http://root:@127.0.0.1:4580/Execute";
   string newNodeName { get; set; } = "New Node";

   string Now { get; set; }

   bool newNodeDialogOpen { get; set; }

   void loadClicked()
   {
      pages++;
      NodesManager.Instance.PropertyChanged += propChanged;
   }

   void addNodeClicked()
   {
      newNodeDialogOpen = true;
   }

   void doAddNodeClicked()
   {
      newNodeDialogOpen = false;
      NodesManager.Instance.AddNodeAsync(newNodeName, newNodeUrl);
   }

   void propChanged(object sender, PropertyChangedEventArgs e)
   {
      Now = DateTime.Now.ToString();

      this.InvokeAsync(() => this.StateHasChanged());
   }

}

<div class="mat-layout-grid">
	<div class="mat-layout-grid-inner">
		<div class="mat-layout-grid-cell  mat-layout-grid-cell-span-1 mat-layout-grid-cell-align-middle">
			<h4>Nodes</h4>
		</div>
		<div class="mat-layout-grid-cell  mat-layout-grid-cell-span-4 mat-layout-grid-cell-align-middle">
			<MatButton OnClick="@addNodeClicked" Label="Add Node"></MatButton>
			<MatButton OnClick="@loadClicked" Label="Refresh"></MatButton>
		</div>
	</div>
</div>

<MatDialog></MatDialog>

<MatDialog @bind-IsOpen="@newNodeDialogOpen">
	<MatDialogTitle>Add Node</MatDialogTitle>
	<MatDialogContent>

		<div class="mat-layout-grid">
			<div class="mat-layout-grid-inner">
				<div class="mat-layout-grid-cell mat-layout-grid-cell-span-2 mat-layout-grid-cell-align-middle">
					Name
				</div>
				<div class="mat-layout-grid-cell mat-layout-grid-cell-span-6 mat-layout-grid-cell-align-middle">
					<MatTextField @bind-Value="@newNodeName" Style="min-width:400px"></MatTextField>
				</div>
			</div>
		</div>

		<div class="mat-layout-grid">
			<div class="mat-layout-grid-inner">
				<div class="mat-layout-grid-cell mat-layout-grid-cell-span-2 mat-layout-grid-cell-align-middle">
					Url
				</div>
				<div class="mat-layout-grid-cell mat-layout-grid-cell-span-6 mat-layout-grid-cell-align-middle">
					<MatTextField @bind-Value="@newNodeUrl" Style="min-width:400px"></MatTextField>
				</div>
			</div>
		</div>

	</MatDialogContent>

	<MatDialogActions>
		<MatButton OnClick="@doAddNodeClicked" >OK</MatButton>
		<MatButton OnClick="@(e => { newNodeDialogOpen = false; })" >Cancel</MatButton>
	</MatDialogActions>
</MatDialog>

<br />

<MatAccordion Multi="true">

	@foreach (NodeDataManager node in NodesManager.Instance.Nodes)
	{
		<MatExpansionPanel>

			<MatExpansionPanelSummary>

				<MatExpansionPanelHeader>
               <div class="mat-layout-grid">
						<div class="mat-layout-grid-inner">
							<div class="mat-layout-grid-cell  mat-layout-grid-cell-span-4 mat-layout-grid-cell-align-middle">
								<b>@node.Name</b>
							</div>
							<div class="mat-layout-grid-cell  mat-layout-grid-cell-span-2 mat-layout-grid-cell-align-middle">
								@foreach (var success in node.BadgeSuccesses)
								{
									<Badge Color="Color.Success">@success</Badge>
								}
							</div>
							<div class="mat-layout-grid-cell mat-layout-grid-cell-span-4 mat-layout-grid-cell-align-middle">

								@foreach (var notification in node.BadgeNotifications)
								{
									<Badge Color="Color.Primary">@notification</Badge>
								}

								@foreach (var warn in node.BadgeWarnings)
								{
									<Badge Color="Color.Warning">@warn</Badge>
								}

								@foreach (var err in node.BadgeError)
								{
									<Badge Color="Color.Danger">@err</Badge>
								}
							</div>
						</div>
					</div>

				</MatExpansionPanelHeader>
				<MatExpansionPanelSubHeader>
					<MatButton Label="@node.Status"></MatButton>
				</MatExpansionPanelSubHeader>
			</MatExpansionPanelSummary>

			<MatExpansionPanelDetails>

				<NodeComponent Manager="@node"></NodeComponent>

			</MatExpansionPanelDetails>

		</MatExpansionPanel>
	}

</MatAccordion>

<br /><br /><br /><br /><br /><br />
<br /><br /><br /><br /><br /><br />
<br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
<br /><br /><br /><br /><br /><br />
<br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
<br /><br /><br /><br /><br /><br />
<br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
<br /><br /><br /><br /><br /><br />
<br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
<br /><br /><br /><br /><br /><br />
<br /><br /><br /><br /><br /><br />