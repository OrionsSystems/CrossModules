@namespace Orions.Systems.CrossModules.Pages
@page "/upload/dragdrop-viewer"

@using System.IO

<h1>Drag/drop file viewer</h1>

<p>Shows how you can present a custom UI instead of the native file input.</p>

<div class="drag-drop-zone">
    <BlazorInputFile OnChange="ViewFile" />
    @status
</div>

@if (fileName != null)
{
    <h3>@fileName</h3>
    <pre>@fileTextContents</pre>
}

@code {
    const string DefaultStatus = "Drop a text file here to view it, or click to choose a file";
    const int MaxFileSize = 5 * 1024 * 1024; // 5MB
    string status = DefaultStatus;

    string fileName;
    string fileTextContents;

    async Task ViewFile(IFileListEntry[] files)
    {
        var file = files.FirstOrDefault();
        if (file == null)
        {
            return;
        }
        else if (file.Size > MaxFileSize)
        {
            status = $"That's too big. Max size: {MaxFileSize} bytes.";
        }
        else
        {
            status = "Loading...";

            using (var reader = new StreamReader(file.Data))
            {
                fileTextContents = await reader.ReadToEndAsync();
                fileName = file.Name;
            }

            status = DefaultStatus;
        }
    }
}

<style>
    .drag-drop-zone {
        border: 3px dashed #e68710;
        padding: 3rem;
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: #eee;
        box-shadow: inset 0 0 8px rgba(0,0,0,0.2);
        color: #aeaeae;
        font-size: 1.5rem;
        cursor: pointer;
        margin: 1.5rem 0 2rem 0;
        position: relative;
    }

        .drag-drop-zone:hover {
            background-color: #f5f5f5;
        }

        .drag-drop-zone input[type=file] {
            position: absolute;
            width: 100%;
            height: 100%;
            opacity: 0;
            cursor: pointer;
        }
</style>
