@page "/color-picker"
@inherits BaseOrionsComponent

<h3>Color Picker</h3>

<div class="content">
    @*<div class="form-check">
            <input type="checkbox" class="form-check-input" @onchange="OnChangeAlpha" />
            <label class="form-check-label" for="exampleCheck1">Is alpha</label>
        </div>*@

    <div class="form-group">
        <label>Color Format</label>
        <select class="form-control" @onchange="(eventArgs => { OnChangeEditorFormat(eventArgs.Value); })">
            @foreach (var item in EditorFormatOptions)
            {
                <option value="@item">@item</option>
            }
        </select>
    </div>
</div>

<VanillaColorPicker ParentId="@colorParrentId" 
                    Label="Click me" 
                    Class="form-control popup-parent" 
                    Style="top: 45%; left: 1em;" @bind="@SelectedFormat"
                    EditorFormat="@SelectedFormat">
</VanillaColorPicker>

@code{

    string colorParrentId = "basic";

    //public string Color { get; set; }
    //public List<string> PopupOpions { get; set; } = new List<string> { "top", "bottom", "left", "right", "false" };
    //public bool IsAlpha { get; set; }
    //public bool ShowEditor { get; set; }

    public string SelectedFormat { get; set; } = "hex";

    public List<string> EditorFormatOptions { get; set; } = new List<string> { "hex", "hsl", "rgb"};

    public void OnChangeEditorFormat(object value) {

        SelectedFormat = (string) value;
        StateHasChanged();
    }
 }


<style>

    .popup-parent {
        background: dodgerblue;
        color: white;
        padding: 10px 16px;
        width: 100px;
        font-family: sans-serif;
        font-weight: 100;
        font-size: 20px;
        text-align: center;
    }

        .popup-parent:focus {
            outline: 0.3em dashed rgba(255, 165, 0, 0.7);
        }
</style>