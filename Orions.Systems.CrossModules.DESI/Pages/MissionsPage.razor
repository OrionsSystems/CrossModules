@page "/missions"
@using Systems.Desi.Common.Models;
@inherits MissionsPageBase

	<div class="container-fluid missions-page-container">
		@if (Vm != null)
		{

				<div class="missions-widget-container">
					<div class="mission-search-container">
						<input type="text" placeholder="Search projects, tasks, people, etc..." @bind-value="this.Vm.MissionsData.SearchKeyword" @bind-value:event="oninput"/>
						<svg class="search-icon" xmlns="http://www.w3.org/2000/svg" height="136pt" version="1.1" viewBox="-1 0 136 136.21852" width="136pt">
							<g id="surface1">
								<path d="M 93.148438 80.832031 C 109.5 57.742188 104.03125 25.769531 80.941406 9.421875 C 57.851562 -6.925781 25.878906 -1.460938 9.53125 21.632812 C -6.816406 44.722656 -1.351562 76.691406 21.742188 93.039062 C 38.222656 104.707031 60.011719 105.605469 77.394531 95.339844 L 115.164062 132.882812 C 119.242188 137.175781 126.027344 137.347656 130.320312 133.269531 C 134.613281 129.195312 134.785156 122.410156 130.710938 118.117188 C 130.582031 117.980469 130.457031 117.855469 130.320312 117.726562 Z M 51.308594 84.332031 C 33.0625 84.335938 18.269531 69.554688 18.257812 51.308594 C 18.253906 33.0625 33.035156 18.269531 51.285156 18.261719 C 69.507812 18.253906 84.292969 33.011719 84.328125 51.234375 C 84.359375 69.484375 69.585938 84.300781 51.332031 84.332031 C 51.324219 84.332031 51.320312 84.332031 51.308594 84.332031 Z M 51.308594 84.332031 " style=" stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" />
							</g>
						</svg>
					</div>
					<div class="mission-list-container">
						<div class="misssion-list-header">
							All projects
						</div>
						<div class="mission-list-items-container">
							@foreach (var mission in this.Vm.MissionsData.Workflows)
							{
								<div class="mission-item">
									<div class="mission-thumbnail-container">
										@{
											var thumbnail64 = mission.Screenshot != null ? $"data:image/jpg;base64, {Convert.ToBase64String(mission.Screenshot)}" : "";
										}
										<img src="@thumbnail64" />
									</div>
									<div class="mission-description-container">
										<div class="mission-title">
											@mission.Title
										</div>
										<div class="started-label">
											Started: @mission.MissionRunStartUTC.ToString("MMM dd") at @mission.MissionRunStartUTC.ToString("hh:mmtt")
										</div>
										<div class="status-label">
											Status: @mission.TitleDetails
										</div>
									</div>
									<button class="enter-mission-btn">
										Enter mission
										<svg version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 31.49 31.49" xml:space="preserve">
										<path style="fill:currentColor;" d="M21.205,5.007c-0.429-0.444-1.143-0.444-1.587,0c-0.429,0.429-0.429,1.143,0,1.571l8.047,8.047H1.111
									C0.492,14.626,0,15.118,0,15.737c0,0.619,0.492,1.127,1.111,1.127h26.554l-8.047,8.032c-0.429,0.444-0.429,1.159,0,1.587
									c0.444,0.444,1.159,0.444,1.587,0l9.952-9.952c0.444-0.429,0.444-1.143,0-1.571L21.205,5.007z"></path>
							</svg>
									</button>
								</div>
							}
						</div>
						@*<button @onclick="@(() => System.Diagnostics.Debug.WriteLine("lalala"))"></button>*@
					</div>
				</div>

					<div class="available-nodes-widget-container">
						<div class="widget-header">
							Available Nodes
						</div>
						<div class="nodes-list">
							@foreach (var node in this.Vm.MissionsData.AvailableNodes)
							{
								<div class="node-list-item-container">
									<div style="float:left;">
										<div class="node-name">
											@node.AuthenticationData.Alias
										</div>
										<div class="node-url">
											@{
												var connectionStringWithoutCreds = node.AuthenticationData.ConnectionString;
												var credSymbolIndex = connectionStringWithoutCreds.IndexOf('@');

												if (credSymbolIndex >= 0)
												{
													connectionStringWithoutCreds = connectionStringWithoutCreds.Substring(credSymbolIndex + 1);
												}
											}
											@connectionStringWithoutCreds
										</div>
									</div>
									<div class="node-status-icon-container">
										@if (node.ConnectionStatus == ConnectionStatus.Connected)
										{
											<img src="images/round_done_outline_green_18dp.png" />
										}
										else if (node.ConnectionStatus == ConnectionStatus.Faulted)
										{
											<img src="images/round_error_outline_red_18dp.png" />
										}
									</div>
									<div style="clear:both"></div>
								</div>
							}
						</div>
					</div>
		}

	</div>

	<style>

	</style>
