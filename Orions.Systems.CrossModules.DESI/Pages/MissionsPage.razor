@page "/"
@inherits MissionsPageBase

@if (Vm != null)
{
	<div class="available-nodes-widget-container">
		<div class="widget-header">
			Available Nodes
		</div>
		<div class="nodes-list">
			@foreach (var node in this.Vm.MissionsData.AvailableNodes)
			{
				<div class="node-list-item-container">
					<div style="float:left;">
						<div class="node-name">
							@node.AuthenticationData.Alias
						</div>
						<div class="node-url">
							@node.AuthenticationData.ConnectionString
						</div>
					</div>
					<div class="node-status-icon-container">
						OK
					</div>
					<div style="clear:both"></div>
				</div>
			}
		</div>
	</div>
}

@code{
	protected override async Task OnInitializedAsync()
	{
		await this.Initialize();
	}
}
<style>
	.available-nodes-widget-container {
		width: 100%;
		height: 100%;
		background-color: beige;
		border-radius: 6px;
	}

		.available-nodes-widget-container > div {
			padding: 5px;
			width: 100%;
		}

		.available-nodes-widget-container .widget-header {
			border-bottom: 1px solid black;
			font-size: 1.2em;
			font-weight: bold;
			color: darkgrey;
			text-align: center;
		}

		.available-nodes-widget-container .nodes-list {
			min-height: 400px;
		}

			.available-nodes-widget-container .nodes-list .node-list-item-container .node-name {
				font-weight: bold;
				font-size: 1.2em;
			}

			.available-nodes-widget-container .nodes-list .node-list-item-container .node-url {
				padding-left: 5px;
			}

				.available-nodes-widget-container .nodes-list .node-list-item-container .node-url .node-status-icon-container {
					float: left;
					padding-left: 5px;
					padding-top: 10px;
				}
</style>
