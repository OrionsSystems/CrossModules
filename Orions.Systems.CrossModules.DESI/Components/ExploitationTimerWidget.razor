@inherits BaseComponent
@using Orions.Systems.Desi.Common.TaskExploitation;
@using System.Reactive.Linq;
@using Systems.Desi.Common.Models;

<div class="mission-title">
    Batch time left: @(TaskDataStore.Data.CurrentTask?.ExecutionTimeLeft.ToString(@"mm\:ss") ?? string.Empty)
</div>

@code {
    private IDisposable _currentTaskChangedSub;
    private IDisposable _executionTimeLeftChangedSub;

    [Inject]
    public ITaskDataStore TaskDataStore { get; set; }

    protected override void OnInitializedSafe()
    {
        base.OnInitializedSafe();

        _currentTaskChangedSub = TaskDataStore?.Data?.CurrentTaskChanged.Subscribe(_ =>
        {
            _executionTimeLeftChangedSub?.Dispose();
            _executionTimeLeftChangedSub = TaskDataStore.Data?.CurrentTask?
                .GetPropertyChangedObservable()
                .Where(i => i.EventArgs.PropertyName == nameof(TaskModel.ExecutionTimeLeft))
                .Subscribe(_ => UpdateState());
        });

        _executionTimeLeftChangedSub = TaskDataStore.Data?.CurrentTask?
            .GetPropertyChangedObservable()
            .Where(i => i.EventArgs.PropertyName == nameof(TaskModel.ExecutionTimeLeft))
            .Subscribe(_ => UpdateState());
    }

    protected override void Dispose(bool disposing)
    {
        _currentTaskChangedSub?.Dispose();
        _executionTimeLeftChangedSub?.Dispose();

        base.Dispose(disposing);
    }
}
