@page "/"

@using Orions.Systems.CrossModules.Blazor;

@using Orions.Infrastructure.HyperMedia;
@using Orions.Common

@inherits BaseBlazorComponent
@inject Microsoft.JSInterop.IJSRuntime JS

<h1>Orions Cross Modules Sample & Diagnostics</h1>

<br />

<text>Forward Parameters URL (forward all parameters passed to this Cross Module to another one, on the given address)</text>
<br />

<textarea @bind="@ForwardURL" style="width:800px;">@ForwardURL</textarea>
<br />

<button class="btn btn-primary" @onclick="@OnForward">Forward</button>

<br />
<br />

<textarea readonly="readonly" style="width:1400px;height:1800px">@PrintText</textarea>


@code
{
   [Parameter]
   public string PrintText { get; set; }

   [Parameter]
   public string ForwardURL { get; set; } = "http://localhost:5000";

   CrossModuleVisualizationRequest VizRequest { get; set; }

   protected void OnForward()
   {
      var stringResult = GetQueryParameterString("request");

      string requestUrl = ForwardURL + "/?request=" + System.Web.HttpUtility.UrlEncode(stringResult);

      var t = NavigateToUrlAsync(requestUrl, true);
   }

   protected override Task OnInitializedAsync()
   {
      var sb = new System.Text.StringBuilder();


      var vizRequest = GetObjectFromQueryString<CrossModuleVisualizationRequest>("request");
      VizRequest = vizRequest;

      sb.AppendLine("---- REQUEST RAW ---->>");
      sb.AppendLine("");
      sb.AppendLine(GetQueryParameterString("request"));
      sb.AppendLine("");
      sb.AppendLine("<<---- ---- ---- ---- ---- ---- ---- ---- ");

      sb.AppendLine("");

      sb.AppendLine("---- REQUEST JSON ---->>");
      sb.AppendLine("");
      if (vizRequest != null)
         sb.AppendLine(JsonHelper.Serialize(vizRequest, false, true));
      sb.AppendLine("");
      sb.AppendLine("<<---- ---- ---- ---- ---- ---- ---- ---- ");

      sb.AppendLine("");

      sb.AppendLine("---- COMMAND LINE RAW ---->>");
      sb.AppendLine("");
      if (Program.CrossModuleInstanceHost.CommandLineArgs != null)
         sb.AppendLine(String.Join(' ', Program.CrossModuleInstanceHost.CommandLineArgs));
      sb.AppendLine("");
      sb.AppendLine("<<---- ---- ---- ---- ---- ---- ---- ---- ");

      sb.AppendLine("");

      sb.AppendLine("---- COMMAND LINE APPLIED CONFIG ---->>");
      sb.AppendLine("");
      if (Program.CrossModuleInstanceHost.AppliedConfig != null)
         sb.AppendLine(JsonHelper.Serialize(Program.CrossModuleInstanceHost.AppliedConfig, false, true));
      sb.AppendLine("");
      sb.AppendLine("<<---- ---- ---- ---- ---- ---- ---- ---- ");


      PrintText = sb.ToString();

      return base.OnInitializedAsync();
   }
}