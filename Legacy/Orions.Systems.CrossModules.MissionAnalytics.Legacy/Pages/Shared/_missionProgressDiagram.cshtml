@model IndexModel

<div class="row">
	<div class="col-lg-12">
		<div class="demo-section k-content wide">
			@(Html.Kendo().Chart<ContentProgressViewModel>()
					.Name("chart")
					//.Title("Mission Progress")
					.Legend(legend => legend
						.Position(ChartLegendPosition.Bottom)
					)
					.DataSource(ds => ds
						.ServerOperation(true)
						.Read(read => read.Action("GetProgressData", "MissionAnalytics").Data("getFilter"))
						.Sort(sort => sort.Add(model => model.Date).Ascending())
					)
					.Events(it => it.Render("onChartRender"))
					.ChartArea(chartArea => chartArea
						.Background("transparent")
					)
					.Series(series =>
					{
						series
							.Area(model => model.ExploitedDurationRound)
							.Name("Exploited Duration").CategoryField("Date")
							.Axis("hours");
						series
							.Area(model => model.TotalDurationRound)
							.Name("Total Duration").CategoryField("Date")
							.Axis("hours");
						series
							.Line(model => model.TasksPerformed)
							.Name("Tasks Performed").CategoryField("Date");
						series
							.Line(model => model.TasksOutstanding)
							.Name("Tasks Outstanding").CategoryField("Date");
						series
							.Line(model => model.TasksCompletedPerPeriod)
							.Name("Tasks Completed Per Period").CategoryField("Date");
					})
					.CategoryAxis(axis => axis
						.Date()
						.Labels(labels => labels.Rotation("auto"))
                        .Crosshair(c => c.Visible(true))
						.BaseUnit(ChartAxisBaseUnit.Fit)
					)
					.ValueAxis(axis => axis
						.Numeric()
						.Title("Tasks")
						.Color("#642381")
					)
					.ValueAxis(axis => axis
						.Numeric("hours")
						//.AxisCrossingValue(0, int.MinValue)
						.Title("Hours")
					)
					.Tooltip(tooltip => tooltip
						.Visible(true)
						.Shared(true)
					//.Format("{0:N0}")
					)
					.Pannable(pannable => pannable
						.Lock(ChartAxisLock.Y)
					)
					.Zoomable(zoomable => zoomable
						.Mousewheel(mousewheel => mousewheel.Lock(ChartAxisLock.Y))
						.Selection(selection => selection.Lock(ChartAxisLock.Y))
					)
					.Deferred()
			)
			<div id="progressChartLoading"></div>
		</div>
	</div>
</div>
