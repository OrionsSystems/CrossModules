@namespace Orions.Systems.CrossModules.Portal.Pages
@page "/tagonomies"
@page "/tagonomy/{TagonomyId}/edit"

@using Orions.Infrastructure.HyperSemantic
@using Syncfusion.EJ2.Blazor.Notifications

@inherits PortalBaseComponent

@inject NavigationManager navManager


<Toast @ref="ToastRef"></Toast>

@if (IsEditMode)
{
	<TagonomyEditor HyperStore="@HyperStore" TagonomyId="@TagonomyId" OnShowVizList="@ShowVizList" OnToastMessage="OnToastMessage"></TagonomyEditor>
}
else
{
	<TagonomyList HyperStore="@HyperStore" OnManage="@OnManage" OnEdit="@OnEdit">
	</TagonomyList>
}

@code{


	private Toast ToastRef { get; set; }

	[Parameter]
	public string TagonomyId { get; set; }

	private bool IsEditMode { get { return string.IsNullOrWhiteSpace(TagonomyId) == false; } }

	protected override async Task OnInitializedAsync()
	{
		await base.OnInitializedAsync();
	}

	private async Task OnManage(Tagonomy tagonomy)
	{
		if (tagonomy == null) return;

		var url = $"{navManager.BaseUri}tagonomy-designer/{tagonomy.Id}";

		await NavigateToUrlAsync(url, true);

	}

	private async Task OnEdit(Tagonomy tagonomy)
	{
		if (tagonomy == null) return;

		var url = $"{navManager.BaseUri}tagonomy/{tagonomy.Id}/edit";

		await NavigateToUrlAsync(url, true);

	}

	private async Task ShowVizList(Tagonomy tagonomy)
	{
		if (tagonomy == null) return;

		var url = $"{navManager.BaseUri}vizlist/{tagonomy.Id}";

		await NavigateToUrlAsync(url, true);

	}

	private void OnToastMessage(ToastMessage msg)
	{
		ToastRef.Show(msg);
	}

}



