@namespace Orions.Systems.CrossModules.Portal.Pages
@page "/dashboard"

@using Orions.Infrastructure.HyperMedia
@using Orions.Node.Common

@inherits BaseOrionsComponent

@inject IMatToaster Toaster

@if (isDashboardSelected)
{
	<DashboardLayout Data="Data"
						  EnableBetweenBox="true"
						  IsPreviewMode="@isShowViewDashboard"
						  DisableModeOption="false"
						  Title="@Data.Name"
						  HyperStore="@HyperStore"
						  OnSave="SaveChanges"
						  OnBackToList="ShowDashboardList">
	</DashboardLayout>
}
else
{
	<DashboardList HyperStore="@HyperStore" OnSelectDesign="OnSelectDesignDashboard" OnSelectView="OnSelectViewDashboard"></DashboardList>
}

@code{

	private bool isDashboardSelected;
	private bool isShowViewDashboard;
	private DashboardData Data { get; set; }

	public IHyperArgsSink HyperStore { get; set; }

	protected override async Task OnInitializedAsync()
	{
		HyperStore = await NetStore.ConnectAsyncThrows("http://service:serv12@usnbods01wan.orionscloud.com:8600/Execute");

		await base.OnInitializedAsync();
	}

	async Task SaveChanges()
	{
		// Save dashboard data here

		var doc = new HyperDocument(Data);

		var args = new StoreHyperDocumentArgs(doc);
		var res = await HyperStore.ExecuteAsync(args);

		ShowToaster(MatToastType.Success, "", "Save changes");
	}

	private void ShowDashboardList()
	{
		Data = null;
		isDashboardSelected = false;
	}

	private void OnSelectDesignDashboard(DashboardData data)
	{
		Data = data;
		isShowViewDashboard = false;
		isDashboardSelected = true;
	}

	private void OnSelectViewDashboard(DashboardData data)
	{
		Data = data;
		isShowViewDashboard = true;
		isDashboardSelected = true;

	}

	private void ShowToaster(MatToastType type, string title, string message)
	{
		Toaster.Add(message, type, title, "", config =>
		{
			config.ShowCloseButton = false;
			config.ShowProgressBar = false;
			config.MaximumOpacity = 100;
		});
	}
}
