@namespace Orions.Systems.CrossModules.Portal.Pages
@page "/dashboard"

@using Orions.Infrastructure.HyperMedia
@using Orions.Infrastructure.Reporting
@using Orions.Node.Common

@inherits BaseOrionsComponent

@inject IMatToaster Toaster

@if (isDashboardSelected)
{
    <DashboardLayout Data="Data"
                     EnableBetweenBox="true"
                     IsPreviewMode="false"
                     DisableModeOption="false"
                     Title="@Data.Name"
                     HyperStore="@HyperStore"
                     OnSave="SaveChanges"
                     OnBackToList="ShowDashboardList">
    </DashboardLayout>
}
else
{
    <DashboardList HyperStore="@HyperStore" OnSelect="OnSelectDashboard"></DashboardList>
}

@code{

    private bool isDashboardSelected;
    private DashboardData Data { get; set; }

    public IHyperArgsSink HyperStore { get; set; }

    protected override async Task OnInitializedAsync()
    {
        HyperStore = await NetStore.ConnectAsyncThrows("http://gabe:g203040@usnbods01wan.orionscloud.com:8600/Execute");

        await base.OnInitializedAsync();
    }

    async Task SaveChanges()
    {
        // Save dashboard data here

        var doc = new HyperDocument(Data);

        var args = new StoreHyperDocumentArgs(doc);
        var res = await HyperStore.ExecuteAsync(args);

        ShowToaster(MatToastType.Success, "", "Save changes");
    }

    private void ShowDashboardList()
    {
        Data = null;
        isDashboardSelected = false;
    }

    private void OnSelectDashboard(DashboardData data)
    {
        Data = data;
        isDashboardSelected = true;
    }

    private void ShowToaster(MatToastType type, string title, string message)
    {
        Toaster.Add(message, type, title, "", config =>
        {
            config.ShowCloseButton = false;
            config.ShowProgressBar = false;
            config.MaximumOpacity = 100;
        });
    }
}
