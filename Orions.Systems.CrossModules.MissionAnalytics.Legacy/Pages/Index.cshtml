@page
@model IndexModel
@{
    ViewData["Title"] = "Mission Analytics";

    var routeParams = new
    {
        Instace = Model.Instance,
        WorkflowInstanceIds = Model.WorkflowInstanceIds,
        ReportDays = Model.ReportDaysValue,
    };

    var statisticUrl = Url.Action("GetStatisticsData", "MissionAnalytics", routeParams);
    //var statisticUrl = Url.RouteUrl("MissionAnalytics/GetStatisticsData", routeParams);

}

<div class="wrapper">
	@if (string.IsNullOrEmpty(Model.TemplateId) || Model.TemplateId == "3")
	{
		@await Html.PartialAsync("_mission-v3", Model)
	}
	else if (Model.TemplateId == "1")
	{
		@await Html.PartialAsync("_mission-v1", Model)
	}
	else if (Model.TemplateId == "2")
	{
		@await Html.PartialAsync("_mission-v2", Model)
	}

</div>

<div id="loading" class="ui-loading ui-loading-firstload">
	<div class="lds-spinner"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>
</div>

@section scripts{
	<script type="text/javascript">

		function createSessionSparklines(rowDataSource) {

			var sessions = new Array();
			rowDataSource.forEach(function (element) {
				if (element.Content === 'Sessions') sessions.push(element.Sessions);
			})

			$("#session-log").kendoSparkline({
				type: "area",
				data: sessions,
				tooltip: {
					format: "{0} Count"
				}
			});

			kendo.ui.progress($("#sessionChartLoading"), false);
		}

		function createNewTaggersSparklines(rowDataSource) {

			var newTaggers = new Array();
			rowDataSource.forEach(function (element) {
				if (element.Content === 'NewTaggers')  newTaggers.push(element.NewTaggers);
			})

			$("#new-taggers-log").kendoSparkline({
				type: "area",
				data: newTaggers,
				tooltip: {
					format: "{0}"
				}
			});

			kendo.ui.progress($("#newTaggersChartLoading"), false);
		}

		function createExploitationSaturationSparklines(rowDataSource) {

			var exploitationSaturations = new Array();
			rowDataSource.forEach(function (element) {
				if (element.Content === 'ExploitationSaturation') exploitationSaturations.push(element.ExploitationSaturationRound);
			})

			$("#exploitation-saturation-log").kendoSparkline({
				type: "area",
				data: exploitationSaturations,
				tooltip: {
					format: "{0} %"
				}
			});

			kendo.ui.progress($("#exploitationSaturationChartLoading"), false);
		}

		function createCompletionPercentSparklines(rowDataSource) {

			var completionPercent = new Array();
			rowDataSource.forEach(function (element) {
				if (element.Content === 'CompletionPercent') completionPercent.push(element.CompletionPercentRound);
			})

			$("#completion-percent-log").kendoSparkline({
				type: "area",
				data: completionPercent,
				tooltip: {
					format: "{0} %"
				}
			});

			kendo.ui.progress($("#completionPercentChartLoading"), false);
		}

		function statistic_loading() {

			var statistic = $("#missionStatistic");
			var template = statistic.data('template');

			statistic.html('');

			var missionStatisticTitle = $('#missionStatisticTitle');
			missionStatisticTitle.addClass('hidden');

			var url = "@Html.Raw(statisticUrl)";

			if (template) url = url + '&template=' + template;

			$.get(url).done(function (response) {

				kendo.ui.progress($("#statisticChartLoading"), false);
				missionStatisticTitle.removeClass('hidden');

				statistic.append(response);

			});
		}

		function onChartRender(e) {
			var loading = $("#progressChartLoading", e.sender.element.parent());
			kendo.ui.progress(loading, false);

			var missionProgressTitle = $('#missionProgressTitle');
			missionProgressTitle.removeClass('hidden');

			var chart = $("#chart").data("kendoChart");
			var rowDataSource = chart.dataSource._data;

			createSessionSparklines(rowDataSource);
			createNewTaggersSparklines(rowDataSource);
			createExploitationSaturationSparklines(rowDataSource);
			createCompletionPercentSparklines(rowDataSource);
		}

		function updatePageUrlAndRefresh() {

			var url = getBaseAddress() + encodeQuery(getFilter());

			setTimeout(function () {
				window.location.href = url;
			}, 300);
		}

		function getFilter() {

			var instanceFilter = $('#Instances').data("kendoDropDownList").value();
			var stageFilter = $('#Stages').data("kendoDropDownList").value();
			var daysFilter = $('#Days').data("kendoDropDownList").value();

			var workflowInstanceIds = new Array();
			@foreach (var workflowInstanceId in Model.WorkflowInstanceIds)
			{
				@:workflowInstanceIds.push("@workflowInstanceId");
			}

			var filter =  {
				ReportDays: "@Model.ReportDaysValue",
				TimeStep: "@Model.TimeStep",
				TemplateId: "@Model.TemplateId"
			};

			if (workflowInstanceIds && workflowInstanceIds.length > 0) {
				filter.WorkflowInstanceIds = workflowInstanceIds;
			}

			var missionId = "@Model.MissionId";
			if (missionId) filter.MissionId = missionId;

			if (instanceFilter) filter.Instance = instanceFilter;
			if (stageFilter) filter.Stage = stageFilter;
			if (daysFilter) filter.ReportDays = daysFilter;

			return filter;
		}

		function onChangeFilter(e) {

			var chart = $("#chart").data("kendoChart");
			chart.dataSource.read(getFilter());
			chart.refresh();

			statistic_loading();

			var params = getFilter();
			updateUrl(params);
		}

		function updateMode(e) {
			var self = $(e);

			var templateId = self.data('mode');

			if (!templateId) return Error('Template Id');

			console.log('template Id is: ' + templateId);

			var params = getFilter();

			params.TemplateId = templateId

			setTimeout(function () {
				window.location.href = getBaseAddress() + encodeQuery(params);
			}, 300);

		}

		var loadingObject,
			pointer;
		var loading = {
			init: function () {
				loadingObject = $('#loading');
			},
			show: function () {
				clearTimeout(pointer);
				loadingObject.removeClass('hidden');
				return loadingObject;
			},
			hide: function (timeout) {
				clearTimeout(pointer);
				pointer = setTimeout(function () {
					loadingObject.addClass('hidden');
				}, timeout || 1);
				return loadingObject;
			}
		};

        $(document).ready(function () {

            alert("Mission ID: @Model.MissionId")

			//init main loader
			loading.init();

			var params = getFilter();
			updateUrl(params);

			kendo.ui.progress($("#progressChartLoading"), true);

			kendo.ui.progress($("#sessionChartLoading"), true);
			kendo.ui.progress($("#newTaggersChartLoading"), true);
			kendo.ui.progress($("#exploitationSaturationChartLoading"), true);
			kendo.ui.progress($("#completionPercentChartLoading"), true);

			kendo.ui.progress($("#statisticChartLoading"), true);

			statistic_loading();

			loading.hide();

		});

	</script>
}




